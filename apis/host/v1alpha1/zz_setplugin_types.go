// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SetPluginInitParameters struct {

	// escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
	// The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
	AttributesJSON *string `json:"attributesJson,omitempty" tf:"attributes_json,omitempty"`

	// (String) The host set description.
	// The host set description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The catalog for the host set.
	// The catalog for the host set.
	HostCatalogID *string `json:"hostCatalogId,omitempty" tf:"host_catalog_id,omitempty"`

	// (String) The host set name. Defaults to the resource name.
	// The host set name. Defaults to the resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (List of String) The ordered list of preferred endpoints.
	// The ordered list of preferred endpoints.
	PreferredEndpoints []*string `json:"preferredEndpoints,omitempty" tf:"preferred_endpoints,omitempty"`

	// (Number) The value to set for the sync interval seconds.
	// The value to set for the sync interval seconds.
	SyncIntervalSeconds *float64 `json:"syncIntervalSeconds,omitempty" tf:"sync_interval_seconds,omitempty"`

	// (String) The type of host set
	// The type of host set
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SetPluginObservation struct {

	// escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
	// The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
	AttributesJSON *string `json:"attributesJson,omitempty" tf:"attributes_json,omitempty"`

	// (String) The host set description.
	// The host set description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The catalog for the host set.
	// The catalog for the host set.
	HostCatalogID *string `json:"hostCatalogId,omitempty" tf:"host_catalog_id,omitempty"`

	// (String) The ID of the host set.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The host set name. Defaults to the resource name.
	// The host set name. Defaults to the resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (List of String) The ordered list of preferred endpoints.
	// The ordered list of preferred endpoints.
	PreferredEndpoints []*string `json:"preferredEndpoints,omitempty" tf:"preferred_endpoints,omitempty"`

	// (Number) The value to set for the sync interval seconds.
	// The value to set for the sync interval seconds.
	SyncIntervalSeconds *float64 `json:"syncIntervalSeconds,omitempty" tf:"sync_interval_seconds,omitempty"`

	// (String) The type of host set
	// The type of host set
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type SetPluginParameters struct {

	// escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
	// The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
	// +kubebuilder:validation:Optional
	AttributesJSON *string `json:"attributesJson,omitempty" tf:"attributes_json,omitempty"`

	// (String) The host set description.
	// The host set description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The catalog for the host set.
	// The catalog for the host set.
	// +kubebuilder:validation:Optional
	HostCatalogID *string `json:"hostCatalogId,omitempty" tf:"host_catalog_id,omitempty"`

	// (String) The host set name. Defaults to the resource name.
	// The host set name. Defaults to the resource name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (List of String) The ordered list of preferred endpoints.
	// The ordered list of preferred endpoints.
	// +kubebuilder:validation:Optional
	PreferredEndpoints []*string `json:"preferredEndpoints,omitempty" tf:"preferred_endpoints,omitempty"`

	// (Number) The value to set for the sync interval seconds.
	// The value to set for the sync interval seconds.
	// +kubebuilder:validation:Optional
	SyncIntervalSeconds *float64 `json:"syncIntervalSeconds,omitempty" tf:"sync_interval_seconds,omitempty"`

	// (String) The type of host set
	// The type of host set
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// SetPluginSpec defines the desired state of SetPlugin
type SetPluginSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SetPluginParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SetPluginInitParameters `json:"initProvider,omitempty"`
}

// SetPluginStatus defines the observed state of SetPlugin.
type SetPluginStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SetPluginObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SetPlugin is the Schema for the SetPlugins API. The hostsetplugin resource allows you to configure a Boundary host set. Host sets are always part of a host catalog, so a host catalog resource should be used inline or you should have the host catalog ID in hand to successfully configure a host set.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,boundary}
type SetPlugin struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.hostCatalogId) || (has(self.initProvider) && has(self.initProvider.hostCatalogId))",message="spec.forProvider.hostCatalogId is a required parameter"
	Spec   SetPluginSpec   `json:"spec"`
	Status SetPluginStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SetPluginList contains a list of SetPlugins
type SetPluginList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SetPlugin `json:"items"`
}

// Repository type metadata.
var (
	SetPlugin_Kind             = "SetPlugin"
	SetPlugin_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SetPlugin_Kind}.String()
	SetPlugin_KindAPIVersion   = SetPlugin_Kind + "." + CRDGroupVersion.String()
	SetPlugin_GroupVersionKind = CRDGroupVersion.WithKind(SetPlugin_Kind)
)

func init() {
	SchemeBuilder.Register(&SetPlugin{}, &SetPluginList{})
}
