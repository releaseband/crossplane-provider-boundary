// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MethodOidcInitParameters struct {

	// (String) The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.
	// The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.
	APIURLPrefix *string `json:"apiUrlPrefix,omitempty" tf:"api_url_prefix,omitempty"`

	// (List of String) Account claim maps for the to_claim of sub.
	// Account claim maps for the to_claim of sub.
	AccountClaimMaps []*string `json:"accountClaimMaps,omitempty" tf:"account_claim_maps,omitempty"`

	// (List of String) Audiences for which the provider responses will be allowed
	// Audiences for which the provider responses will be allowed
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// (String) The URL that should be provided to the IdP for callbacks.
	// The URL that should be provided to the IdP for callbacks.
	CallbackURL *string `json:"callbackUrl,omitempty" tf:"callback_url,omitempty"`

	// (List of String) Claims scopes.
	// Claims scopes.
	ClaimsScopes []*string `json:"claimsScopes,omitempty" tf:"claims_scopes,omitempty"`

	// (String) The client ID assigned to this auth method from the provider.
	// The client ID assigned to this auth method from the provider.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// (String) The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.
	// The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.
	ClientSecretHMAC *string `json:"clientSecretHmac,omitempty" tf:"client_secret_hmac,omitempty"`

	// (String, Sensitive) The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration.
	// The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration.
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// (String) The auth method description.
	// The auth method description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.
	// Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.
	DisableDiscoveredConfigValidation *bool `json:"disableDiscoveredConfigValidation,omitempty" tf:"disable_discovered_config_validation,omitempty"`

	// (List of String) A list of CA certificates to trust when validating the IdP's token signatures.
	// A list of CA certificates to trust when validating the IdP's token signatures.
	IdpCACerts []*string `json:"idpCaCerts,omitempty" tf:"idp_ca_certs,omitempty"`

	// (Boolean) When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the user will be automatically created when they login using an OIDC account.
	// When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the user will be automatically created when they login using an OIDC account.
	IsPrimaryForScope *bool `json:"isPrimaryForScope,omitempty" tf:"is_primary_for_scope,omitempty"`

	// (String) The issuer corresponding to the provider, which must match the issuer field in generated tokens.
	// The issuer corresponding to the provider, which must match the issuer field in generated tokens.
	Issuer *string `json:"issuer,omitempty" tf:"issuer,omitempty"`

	// 1 and the default TTL of the chosen OIDC will be used.
	// The max age to provide to the provider, indicating how much time is allowed to have passed since the last authentication before the user is challenged again.
	MaxAge *float64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// (String) The auth method name. Defaults to the resource name.
	// The auth method name. Defaults to the resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// user for reauthentication, account selection or consent. Please note the values passed are case-sensitive. The valid values are: none, login, consent and select_account.
	// The prompts passed to the identity provider to determine whether to prompt the end-user for reauthentication, account selection or consent. Please note the values passed are case-sensitive. The valid values are: `none`, `login`, `consent` and `select_account`.
	Prompts []*string `json:"prompts,omitempty" tf:"prompts,omitempty"`

	// (String) The scope ID.
	// The scope ID.
	// +crossplane:generate:reference:type=github.com/releaseband/crossplane-provider-boundary/apis/main/v1alpha1.Scope
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("id",true)
	ScopeID *string `json:"scopeId,omitempty" tf:"scope_id,omitempty"`

	// Reference to a Scope in main to populate scopeId.
	// +kubebuilder:validation:Optional
	ScopeIDRef *v1.Reference `json:"scopeIdRef,omitempty" tf:"-"`

	// Selector for a Scope in main to populate scopeId.
	// +kubebuilder:validation:Optional
	ScopeIDSelector *v1.Selector `json:"scopeIdSelector,omitempty" tf:"-"`

	// (List of String) Allowed signing algorithms for the provider's issued tokens.
	// Allowed signing algorithms for the provider's issued tokens.
	SigningAlgorithms []*string `json:"signingAlgorithms,omitempty" tf:"signing_algorithms,omitempty"`

	// private', or 'active-public'. Currently automatically set to active-public.
	// Can be one of 'inactive', 'active-private', or 'active-public'. Currently automatically set to active-public.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The type of auth method; hardcoded.
	// The type of auth method; hardcoded.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MethodOidcObservation struct {

	// (String) The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.
	// The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.
	APIURLPrefix *string `json:"apiUrlPrefix,omitempty" tf:"api_url_prefix,omitempty"`

	// (List of String) Account claim maps for the to_claim of sub.
	// Account claim maps for the to_claim of sub.
	AccountClaimMaps []*string `json:"accountClaimMaps,omitempty" tf:"account_claim_maps,omitempty"`

	// (List of String) Audiences for which the provider responses will be allowed
	// Audiences for which the provider responses will be allowed
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// (String) The URL that should be provided to the IdP for callbacks.
	// The URL that should be provided to the IdP for callbacks.
	CallbackURL *string `json:"callbackUrl,omitempty" tf:"callback_url,omitempty"`

	// (List of String) Claims scopes.
	// Claims scopes.
	ClaimsScopes []*string `json:"claimsScopes,omitempty" tf:"claims_scopes,omitempty"`

	// (String) The client ID assigned to this auth method from the provider.
	// The client ID assigned to this auth method from the provider.
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// (String) The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.
	// The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.
	ClientSecretHMAC *string `json:"clientSecretHmac,omitempty" tf:"client_secret_hmac,omitempty"`

	// (String) The auth method description.
	// The auth method description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.
	// Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.
	DisableDiscoveredConfigValidation *bool `json:"disableDiscoveredConfigValidation,omitempty" tf:"disable_discovered_config_validation,omitempty"`

	// (String) The ID of the auth method.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (List of String) A list of CA certificates to trust when validating the IdP's token signatures.
	// A list of CA certificates to trust when validating the IdP's token signatures.
	IdpCACerts []*string `json:"idpCaCerts,omitempty" tf:"idp_ca_certs,omitempty"`

	// (Boolean) When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the user will be automatically created when they login using an OIDC account.
	// When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the user will be automatically created when they login using an OIDC account.
	IsPrimaryForScope *bool `json:"isPrimaryForScope,omitempty" tf:"is_primary_for_scope,omitempty"`

	// (String) The issuer corresponding to the provider, which must match the issuer field in generated tokens.
	// The issuer corresponding to the provider, which must match the issuer field in generated tokens.
	Issuer *string `json:"issuer,omitempty" tf:"issuer,omitempty"`

	// 1 and the default TTL of the chosen OIDC will be used.
	// The max age to provide to the provider, indicating how much time is allowed to have passed since the last authentication before the user is challenged again.
	MaxAge *float64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// (String) The auth method name. Defaults to the resource name.
	// The auth method name. Defaults to the resource name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// user for reauthentication, account selection or consent. Please note the values passed are case-sensitive. The valid values are: none, login, consent and select_account.
	// The prompts passed to the identity provider to determine whether to prompt the end-user for reauthentication, account selection or consent. Please note the values passed are case-sensitive. The valid values are: `none`, `login`, `consent` and `select_account`.
	Prompts []*string `json:"prompts,omitempty" tf:"prompts,omitempty"`

	// (String) The scope ID.
	// The scope ID.
	ScopeID *string `json:"scopeId,omitempty" tf:"scope_id,omitempty"`

	// (List of String) Allowed signing algorithms for the provider's issued tokens.
	// Allowed signing algorithms for the provider's issued tokens.
	SigningAlgorithms []*string `json:"signingAlgorithms,omitempty" tf:"signing_algorithms,omitempty"`

	// private', or 'active-public'. Currently automatically set to active-public.
	// Can be one of 'inactive', 'active-private', or 'active-public'. Currently automatically set to active-public.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The type of auth method; hardcoded.
	// The type of auth method; hardcoded.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type MethodOidcParameters struct {

	// (String) The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.
	// The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.
	// +kubebuilder:validation:Optional
	APIURLPrefix *string `json:"apiUrlPrefix,omitempty" tf:"api_url_prefix,omitempty"`

	// (List of String) Account claim maps for the to_claim of sub.
	// Account claim maps for the to_claim of sub.
	// +kubebuilder:validation:Optional
	AccountClaimMaps []*string `json:"accountClaimMaps,omitempty" tf:"account_claim_maps,omitempty"`

	// (List of String) Audiences for which the provider responses will be allowed
	// Audiences for which the provider responses will be allowed
	// +kubebuilder:validation:Optional
	AllowedAudiences []*string `json:"allowedAudiences,omitempty" tf:"allowed_audiences,omitempty"`

	// (String) The URL that should be provided to the IdP for callbacks.
	// The URL that should be provided to the IdP for callbacks.
	// +kubebuilder:validation:Optional
	CallbackURL *string `json:"callbackUrl,omitempty" tf:"callback_url,omitempty"`

	// (List of String) Claims scopes.
	// Claims scopes.
	// +kubebuilder:validation:Optional
	ClaimsScopes []*string `json:"claimsScopes,omitempty" tf:"claims_scopes,omitempty"`

	// (String) The client ID assigned to this auth method from the provider.
	// The client ID assigned to this auth method from the provider.
	// +kubebuilder:validation:Optional
	ClientID *string `json:"clientId,omitempty" tf:"client_id,omitempty"`

	// (String) The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.
	// The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.
	// +kubebuilder:validation:Optional
	ClientSecretHMAC *string `json:"clientSecretHmac,omitempty" tf:"client_secret_hmac,omitempty"`

	// (String, Sensitive) The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration.
	// The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration.
	// +kubebuilder:validation:Optional
	ClientSecretSecretRef *v1.SecretKeySelector `json:"clientSecretSecretRef,omitempty" tf:"-"`

	// (String) The auth method description.
	// The auth method description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.
	// Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.
	// +kubebuilder:validation:Optional
	DisableDiscoveredConfigValidation *bool `json:"disableDiscoveredConfigValidation,omitempty" tf:"disable_discovered_config_validation,omitempty"`

	// (List of String) A list of CA certificates to trust when validating the IdP's token signatures.
	// A list of CA certificates to trust when validating the IdP's token signatures.
	// +kubebuilder:validation:Optional
	IdpCACerts []*string `json:"idpCaCerts,omitempty" tf:"idp_ca_certs,omitempty"`

	// (Boolean) When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the user will be automatically created when they login using an OIDC account.
	// When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the user will be automatically created when they login using an OIDC account.
	// +kubebuilder:validation:Optional
	IsPrimaryForScope *bool `json:"isPrimaryForScope,omitempty" tf:"is_primary_for_scope,omitempty"`

	// (String) The issuer corresponding to the provider, which must match the issuer field in generated tokens.
	// The issuer corresponding to the provider, which must match the issuer field in generated tokens.
	// +kubebuilder:validation:Optional
	Issuer *string `json:"issuer,omitempty" tf:"issuer,omitempty"`

	// 1 and the default TTL of the chosen OIDC will be used.
	// The max age to provide to the provider, indicating how much time is allowed to have passed since the last authentication before the user is challenged again.
	// +kubebuilder:validation:Optional
	MaxAge *float64 `json:"maxAge,omitempty" tf:"max_age,omitempty"`

	// (String) The auth method name. Defaults to the resource name.
	// The auth method name. Defaults to the resource name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// user for reauthentication, account selection or consent. Please note the values passed are case-sensitive. The valid values are: none, login, consent and select_account.
	// The prompts passed to the identity provider to determine whether to prompt the end-user for reauthentication, account selection or consent. Please note the values passed are case-sensitive. The valid values are: `none`, `login`, `consent` and `select_account`.
	// +kubebuilder:validation:Optional
	Prompts []*string `json:"prompts,omitempty" tf:"prompts,omitempty"`

	// (String) The scope ID.
	// The scope ID.
	// +crossplane:generate:reference:type=github.com/releaseband/crossplane-provider-boundary/apis/main/v1alpha1.Scope
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractParamPath("id",true)
	// +kubebuilder:validation:Optional
	ScopeID *string `json:"scopeId,omitempty" tf:"scope_id,omitempty"`

	// Reference to a Scope in main to populate scopeId.
	// +kubebuilder:validation:Optional
	ScopeIDRef *v1.Reference `json:"scopeIdRef,omitempty" tf:"-"`

	// Selector for a Scope in main to populate scopeId.
	// +kubebuilder:validation:Optional
	ScopeIDSelector *v1.Selector `json:"scopeIdSelector,omitempty" tf:"-"`

	// (List of String) Allowed signing algorithms for the provider's issued tokens.
	// Allowed signing algorithms for the provider's issued tokens.
	// +kubebuilder:validation:Optional
	SigningAlgorithms []*string `json:"signingAlgorithms,omitempty" tf:"signing_algorithms,omitempty"`

	// private', or 'active-public'. Currently automatically set to active-public.
	// Can be one of 'inactive', 'active-private', or 'active-public'. Currently automatically set to active-public.
	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The type of auth method; hardcoded.
	// The type of auth method; hardcoded.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// MethodOidcSpec defines the desired state of MethodOidc
type MethodOidcSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MethodOidcParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MethodOidcInitParameters `json:"initProvider,omitempty"`
}

// MethodOidcStatus defines the observed state of MethodOidc.
type MethodOidcStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MethodOidcObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MethodOidc is the Schema for the MethodOidcs API. The OIDC auth method resource allows you to configure a Boundary authmethodoidc.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,boundary}
type MethodOidc struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              MethodOidcSpec   `json:"spec"`
	Status            MethodOidcStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MethodOidcList contains a list of MethodOidcs
type MethodOidcList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MethodOidc `json:"items"`
}

// Repository type metadata.
var (
	MethodOidc_Kind             = "MethodOidc"
	MethodOidc_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MethodOidc_Kind}.String()
	MethodOidc_KindAPIVersion   = MethodOidc_Kind + "." + CRDGroupVersion.String()
	MethodOidc_GroupVersionKind = CRDGroupVersion.WithKind(MethodOidc_Kind)
)

func init() {
	SchemeBuilder.Register(&MethodOidc{}, &MethodOidcList{})
}
