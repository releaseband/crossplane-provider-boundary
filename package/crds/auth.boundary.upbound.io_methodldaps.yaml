---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.0
  name: methodldaps.auth.boundary.upbound.io
spec:
  group: auth.boundary.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - boundary
    kind: MethodLdap
    listKind: MethodLdapList
    plural: methodldaps
    singular: methodldap
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MethodLdap is the Schema for the MethodLdaps API. The LDAP auth
          method resource allows you to configure a Boundary authmethodldap.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MethodLdapSpec defines the desired state of MethodLdap
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountAttributeMaps:
                    description: |-
                      (List of String) Account attribute maps fullname and email.
                      Account attribute maps fullname and email.
                    items:
                      type: string
                    type: array
                  anonGroupSearch:
                    description: |-
                      (Boolean) Use anon bind when performing LDAP group searches .
                      Use anon bind when performing LDAP group searches (optional).
                    type: boolean
                  bindDn:
                    description: |-
                      (String) The distinguished name of entry to bind when performing user and group searches .
                      The distinguished name of entry to bind when performing user and group searches (optional).
                    type: string
                  bindPassword:
                    description: |-
                      dn performing user and group searches .
                      The password to use along with bind-dn performing user and group searches (optional).
                    type: string
                  bindPasswordHmac:
                    description: |-
                      (String) The HMAC of the bind password returned by the Boundary controller, which is used for comparison after initial setting of the value.
                      The HMAC of the bind password returned by the Boundary controller, which is used for comparison after initial setting of the value.
                    type: string
                  certificates:
                    description: |-
                      encoded X.509 CA certificate in ASN.1 DER form that can be used as a trust anchor when connecting to an LDAP server.  This may be specified multiple times
                      PEM-encoded X.509 CA certificate in ASN.1 DER form that can be used as a trust anchor when connecting to an LDAP server(optional).  This may be specified multiple times
                    items:
                      type: string
                    type: array
                  clientCertificate:
                    description: |-
                      encoded X.509 client certificate in ASN.1 DER form that can be used to authenticate against an LDAP server.
                      PEM-encoded X.509 client certificate in ASN.1 DER form that can be used to authenticate against an LDAP server(optional).
                    type: string
                  clientCertificateKey:
                    description: |-
                      encoded X.509 client certificate key in PKCS #8, ASN.1 DER form used with the client certificate .
                      PEM-encoded X.509 client certificate key in PKCS #8, ASN.1 DER form used with the client certificate (optional).
                    type: string
                  clientCertificateKeyHmac:
                    description: |-
                      (String) The HMAC of the client certificate key returned by the Boundary controller, which is used for comparison after initial setting of the value.
                      The HMAC of the client certificate key returned by the Boundary controller, which is used for comparison after initial setting of the value.
                    type: string
                  dereferenceAliases:
                    description: |-
                      (String) Control how aliases are dereferenced when performing the search. Can be one of: NeverDerefAliases, DerefInSearching, DerefFindingBaseObj, and DerefAlways .
                      Control how aliases are dereferenced when performing the search. Can be one of: NeverDerefAliases, DerefInSearching, DerefFindingBaseObj, and DerefAlways (optional).
                    type: string
                  description:
                    description: |-
                      (String) The auth method description.
                      The auth method description.
                    type: string
                  discoverDn:
                    description: |-
                      (Boolean) Use anon bind to discover the bind DN of a user .
                      Use anon bind to discover the bind DN of a user (optional).
                    type: boolean
                  enableGroups:
                    description: |-
                      (Boolean) Find the authenticated user's groups during authentication .
                      Find the authenticated user's groups during authentication (optional).
                    type: boolean
                  groupAttr:
                    description: |-
                      (String) The attribute that enumerates a user's group membership from entries returned by a group search .
                      The attribute that enumerates a user's group membership from entries returned by a group search (optional).
                    type: string
                  groupDn:
                    description: |-
                      (String) The base DN under which to perform group search.
                      The base DN under which to perform group search.
                    type: string
                  groupFilter:
                    description: |-
                      (String) A go template used to construct a LDAP group search filter .
                      A go template used to construct a LDAP group search filter (optional).
                    type: string
                  insecureTls:
                    description: |-
                      insecure and use with caution.
                      Skip the LDAP server SSL certificate validation (optional) - insecure and use with caution.
                    type: boolean
                  isPrimaryForScope:
                    description: |-
                      (Boolean) When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an LDAP account.
                      When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an LDAP account.
                    type: boolean
                  maximumPageSize:
                    description: |-
                      (Number) MaximumPageSize specifies a maximum search result size to use when retrieving the authenticated user's groups .
                      MaximumPageSize specifies a maximum search result size to use when retrieving the authenticated user's groups (optional).
                    type: number
                  name:
                    description: |-
                      (String) The auth method name. Defaults to the resource name.
                      The auth method name. Defaults to the resource name.
                    type: string
                  scopeId:
                    description: |-
                      (String) The scope ID.
                      The scope ID.
                    type: string
                  startTls:
                    description: |-
                      (Boolean) Issue StartTLS command after connecting .
                      Issue StartTLS command after connecting (optional).
                    type: boolean
                  state:
                    description: |-
                      private', or 'active-public'. Defaults to active-public.
                      Can be one of 'inactive', 'active-private', or 'active-public'. Defaults to active-public.
                    type: string
                  type:
                    description: |-
                      (String) The type of auth method; hardcoded.
                      The type of auth method; hardcoded.
                    type: string
                  upnDomain:
                    description: |-
                      (String) The userPrincipalDomain used to construct the UPN string for the authenticating user .
                      The userPrincipalDomain used to construct the UPN string for the authenticating user (optional).
                    type: string
                  urls:
                    description: |-
                      (List of String) The LDAP URLs that specify LDAP servers to connect to .  May be specified multiple times.
                      The LDAP URLs that specify LDAP servers to connect to (required).  May be specified multiple times.
                    items:
                      type: string
                    type: array
                  useTokenGroups:
                    description: |-
                      (Boolean) Use the Active Directory tokenGroups constructed attribute of the user to find the group memberships .
                      Use the Active Directory tokenGroups constructed attribute of the user to find the group memberships (optional).
                    type: boolean
                  userAttr:
                    description: |-
                      (String) The attribute on user entry matching the username passed when authenticating .
                      The attribute on user entry matching the username passed when authenticating (optional).
                    type: string
                  userDn:
                    description: |-
                      (String) The base DN under which to perform user search .
                      The base DN under which to perform user search (optional).
                    type: string
                  userFilter:
                    description: |-
                      (String) A go template used to construct a LDAP user search filter .
                      A go template used to construct a LDAP user search filter (optional).
                    type: string
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accountAttributeMaps:
                    description: |-
                      (List of String) Account attribute maps fullname and email.
                      Account attribute maps fullname and email.
                    items:
                      type: string
                    type: array
                  anonGroupSearch:
                    description: |-
                      (Boolean) Use anon bind when performing LDAP group searches .
                      Use anon bind when performing LDAP group searches (optional).
                    type: boolean
                  bindDn:
                    description: |-
                      (String) The distinguished name of entry to bind when performing user and group searches .
                      The distinguished name of entry to bind when performing user and group searches (optional).
                    type: string
                  bindPassword:
                    description: |-
                      dn performing user and group searches .
                      The password to use along with bind-dn performing user and group searches (optional).
                    type: string
                  bindPasswordHmac:
                    description: |-
                      (String) The HMAC of the bind password returned by the Boundary controller, which is used for comparison after initial setting of the value.
                      The HMAC of the bind password returned by the Boundary controller, which is used for comparison after initial setting of the value.
                    type: string
                  certificates:
                    description: |-
                      encoded X.509 CA certificate in ASN.1 DER form that can be used as a trust anchor when connecting to an LDAP server.  This may be specified multiple times
                      PEM-encoded X.509 CA certificate in ASN.1 DER form that can be used as a trust anchor when connecting to an LDAP server(optional).  This may be specified multiple times
                    items:
                      type: string
                    type: array
                  clientCertificate:
                    description: |-
                      encoded X.509 client certificate in ASN.1 DER form that can be used to authenticate against an LDAP server.
                      PEM-encoded X.509 client certificate in ASN.1 DER form that can be used to authenticate against an LDAP server(optional).
                    type: string
                  clientCertificateKey:
                    description: |-
                      encoded X.509 client certificate key in PKCS #8, ASN.1 DER form used with the client certificate .
                      PEM-encoded X.509 client certificate key in PKCS #8, ASN.1 DER form used with the client certificate (optional).
                    type: string
                  clientCertificateKeyHmac:
                    description: |-
                      (String) The HMAC of the client certificate key returned by the Boundary controller, which is used for comparison after initial setting of the value.
                      The HMAC of the client certificate key returned by the Boundary controller, which is used for comparison after initial setting of the value.
                    type: string
                  dereferenceAliases:
                    description: |-
                      (String) Control how aliases are dereferenced when performing the search. Can be one of: NeverDerefAliases, DerefInSearching, DerefFindingBaseObj, and DerefAlways .
                      Control how aliases are dereferenced when performing the search. Can be one of: NeverDerefAliases, DerefInSearching, DerefFindingBaseObj, and DerefAlways (optional).
                    type: string
                  description:
                    description: |-
                      (String) The auth method description.
                      The auth method description.
                    type: string
                  discoverDn:
                    description: |-
                      (Boolean) Use anon bind to discover the bind DN of a user .
                      Use anon bind to discover the bind DN of a user (optional).
                    type: boolean
                  enableGroups:
                    description: |-
                      (Boolean) Find the authenticated user's groups during authentication .
                      Find the authenticated user's groups during authentication (optional).
                    type: boolean
                  groupAttr:
                    description: |-
                      (String) The attribute that enumerates a user's group membership from entries returned by a group search .
                      The attribute that enumerates a user's group membership from entries returned by a group search (optional).
                    type: string
                  groupDn:
                    description: |-
                      (String) The base DN under which to perform group search.
                      The base DN under which to perform group search.
                    type: string
                  groupFilter:
                    description: |-
                      (String) A go template used to construct a LDAP group search filter .
                      A go template used to construct a LDAP group search filter (optional).
                    type: string
                  insecureTls:
                    description: |-
                      insecure and use with caution.
                      Skip the LDAP server SSL certificate validation (optional) - insecure and use with caution.
                    type: boolean
                  isPrimaryForScope:
                    description: |-
                      (Boolean) When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an LDAP account.
                      When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an LDAP account.
                    type: boolean
                  maximumPageSize:
                    description: |-
                      (Number) MaximumPageSize specifies a maximum search result size to use when retrieving the authenticated user's groups .
                      MaximumPageSize specifies a maximum search result size to use when retrieving the authenticated user's groups (optional).
                    type: number
                  name:
                    description: |-
                      (String) The auth method name. Defaults to the resource name.
                      The auth method name. Defaults to the resource name.
                    type: string
                  scopeId:
                    description: |-
                      (String) The scope ID.
                      The scope ID.
                    type: string
                  startTls:
                    description: |-
                      (Boolean) Issue StartTLS command after connecting .
                      Issue StartTLS command after connecting (optional).
                    type: boolean
                  state:
                    description: |-
                      private', or 'active-public'. Defaults to active-public.
                      Can be one of 'inactive', 'active-private', or 'active-public'. Defaults to active-public.
                    type: string
                  type:
                    description: |-
                      (String) The type of auth method; hardcoded.
                      The type of auth method; hardcoded.
                    type: string
                  upnDomain:
                    description: |-
                      (String) The userPrincipalDomain used to construct the UPN string for the authenticating user .
                      The userPrincipalDomain used to construct the UPN string for the authenticating user (optional).
                    type: string
                  urls:
                    description: |-
                      (List of String) The LDAP URLs that specify LDAP servers to connect to .  May be specified multiple times.
                      The LDAP URLs that specify LDAP servers to connect to (required).  May be specified multiple times.
                    items:
                      type: string
                    type: array
                  useTokenGroups:
                    description: |-
                      (Boolean) Use the Active Directory tokenGroups constructed attribute of the user to find the group memberships .
                      Use the Active Directory tokenGroups constructed attribute of the user to find the group memberships (optional).
                    type: boolean
                  userAttr:
                    description: |-
                      (String) The attribute on user entry matching the username passed when authenticating .
                      The attribute on user entry matching the username passed when authenticating (optional).
                    type: string
                  userDn:
                    description: |-
                      (String) The base DN under which to perform user search .
                      The base DN under which to perform user search (optional).
                    type: string
                  userFilter:
                    description: |-
                      (String) A go template used to construct a LDAP user search filter .
                      A go template used to construct a LDAP user search filter (optional).
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.scopeId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.scopeId)
                || (has(self.initProvider) && has(self.initProvider.scopeId))'
          status:
            description: MethodLdapStatus defines the observed state of MethodLdap.
            properties:
              atProvider:
                properties:
                  accountAttributeMaps:
                    description: |-
                      (List of String) Account attribute maps fullname and email.
                      Account attribute maps fullname and email.
                    items:
                      type: string
                    type: array
                  anonGroupSearch:
                    description: |-
                      (Boolean) Use anon bind when performing LDAP group searches .
                      Use anon bind when performing LDAP group searches (optional).
                    type: boolean
                  bindDn:
                    description: |-
                      (String) The distinguished name of entry to bind when performing user and group searches .
                      The distinguished name of entry to bind when performing user and group searches (optional).
                    type: string
                  bindPassword:
                    description: |-
                      dn performing user and group searches .
                      The password to use along with bind-dn performing user and group searches (optional).
                    type: string
                  bindPasswordHmac:
                    description: |-
                      (String) The HMAC of the bind password returned by the Boundary controller, which is used for comparison after initial setting of the value.
                      The HMAC of the bind password returned by the Boundary controller, which is used for comparison after initial setting of the value.
                    type: string
                  certificates:
                    description: |-
                      encoded X.509 CA certificate in ASN.1 DER form that can be used as a trust anchor when connecting to an LDAP server.  This may be specified multiple times
                      PEM-encoded X.509 CA certificate in ASN.1 DER form that can be used as a trust anchor when connecting to an LDAP server(optional).  This may be specified multiple times
                    items:
                      type: string
                    type: array
                  clientCertificate:
                    description: |-
                      encoded X.509 client certificate in ASN.1 DER form that can be used to authenticate against an LDAP server.
                      PEM-encoded X.509 client certificate in ASN.1 DER form that can be used to authenticate against an LDAP server(optional).
                    type: string
                  clientCertificateKey:
                    description: |-
                      encoded X.509 client certificate key in PKCS #8, ASN.1 DER form used with the client certificate .
                      PEM-encoded X.509 client certificate key in PKCS #8, ASN.1 DER form used with the client certificate (optional).
                    type: string
                  clientCertificateKeyHmac:
                    description: |-
                      (String) The HMAC of the client certificate key returned by the Boundary controller, which is used for comparison after initial setting of the value.
                      The HMAC of the client certificate key returned by the Boundary controller, which is used for comparison after initial setting of the value.
                    type: string
                  dereferenceAliases:
                    description: |-
                      (String) Control how aliases are dereferenced when performing the search. Can be one of: NeverDerefAliases, DerefInSearching, DerefFindingBaseObj, and DerefAlways .
                      Control how aliases are dereferenced when performing the search. Can be one of: NeverDerefAliases, DerefInSearching, DerefFindingBaseObj, and DerefAlways (optional).
                    type: string
                  description:
                    description: |-
                      (String) The auth method description.
                      The auth method description.
                    type: string
                  discoverDn:
                    description: |-
                      (Boolean) Use anon bind to discover the bind DN of a user .
                      Use anon bind to discover the bind DN of a user (optional).
                    type: boolean
                  enableGroups:
                    description: |-
                      (Boolean) Find the authenticated user's groups during authentication .
                      Find the authenticated user's groups during authentication (optional).
                    type: boolean
                  groupAttr:
                    description: |-
                      (String) The attribute that enumerates a user's group membership from entries returned by a group search .
                      The attribute that enumerates a user's group membership from entries returned by a group search (optional).
                    type: string
                  groupDn:
                    description: |-
                      (String) The base DN under which to perform group search.
                      The base DN under which to perform group search.
                    type: string
                  groupFilter:
                    description: |-
                      (String) A go template used to construct a LDAP group search filter .
                      A go template used to construct a LDAP group search filter (optional).
                    type: string
                  id:
                    description: (String) The ID of the auth method.
                    type: string
                  insecureTls:
                    description: |-
                      insecure and use with caution.
                      Skip the LDAP server SSL certificate validation (optional) - insecure and use with caution.
                    type: boolean
                  isPrimaryForScope:
                    description: |-
                      (Boolean) When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an LDAP account.
                      When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an LDAP account.
                    type: boolean
                  maximumPageSize:
                    description: |-
                      (Number) MaximumPageSize specifies a maximum search result size to use when retrieving the authenticated user's groups .
                      MaximumPageSize specifies a maximum search result size to use when retrieving the authenticated user's groups (optional).
                    type: number
                  name:
                    description: |-
                      (String) The auth method name. Defaults to the resource name.
                      The auth method name. Defaults to the resource name.
                    type: string
                  scopeId:
                    description: |-
                      (String) The scope ID.
                      The scope ID.
                    type: string
                  startTls:
                    description: |-
                      (Boolean) Issue StartTLS command after connecting .
                      Issue StartTLS command after connecting (optional).
                    type: boolean
                  state:
                    description: |-
                      private', or 'active-public'. Defaults to active-public.
                      Can be one of 'inactive', 'active-private', or 'active-public'. Defaults to active-public.
                    type: string
                  type:
                    description: |-
                      (String) The type of auth method; hardcoded.
                      The type of auth method; hardcoded.
                    type: string
                  upnDomain:
                    description: |-
                      (String) The userPrincipalDomain used to construct the UPN string for the authenticating user .
                      The userPrincipalDomain used to construct the UPN string for the authenticating user (optional).
                    type: string
                  urls:
                    description: |-
                      (List of String) The LDAP URLs that specify LDAP servers to connect to .  May be specified multiple times.
                      The LDAP URLs that specify LDAP servers to connect to (required).  May be specified multiple times.
                    items:
                      type: string
                    type: array
                  useTokenGroups:
                    description: |-
                      (Boolean) Use the Active Directory tokenGroups constructed attribute of the user to find the group memberships .
                      Use the Active Directory tokenGroups constructed attribute of the user to find the group memberships (optional).
                    type: boolean
                  userAttr:
                    description: |-
                      (String) The attribute on user entry matching the username passed when authenticating .
                      The attribute on user entry matching the username passed when authenticating (optional).
                    type: string
                  userDn:
                    description: |-
                      (String) The base DN under which to perform user search .
                      The base DN under which to perform user search (optional).
                    type: string
                  userFilter:
                    description: |-
                      (String) A go template used to construct a LDAP user search filter .
                      A go template used to construct a LDAP user search filter (optional).
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
