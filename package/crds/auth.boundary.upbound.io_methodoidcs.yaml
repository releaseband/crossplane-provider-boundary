---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: methodoidcs.auth.boundary.upbound.io
spec:
  group: auth.boundary.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - boundary
    kind: MethodOidc
    listKind: MethodOidcList
    plural: methodoidcs
    singular: methodoidc
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MethodOidc is the Schema for the MethodOidcs API. The OIDC auth
          method resource allows you to configure a Boundary authmethodoidc.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MethodOidcSpec defines the desired state of MethodOidc
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountClaimMaps:
                    description: (List of String) Account claim maps for the to_claim
                      of sub. Account claim maps for the to_claim of sub.
                    items:
                      type: string
                    type: array
                  allowedAudiences:
                    description: (List of String) Audiences for which the provider
                      responses will be allowed Audiences for which the provider responses
                      will be allowed
                    items:
                      type: string
                    type: array
                  apiUrlPrefix:
                    description: (String) The API prefix to use when generating callback
                      URLs for the provider. Should be set to an address at which
                      the provider can reach back to the controller. The API prefix
                      to use when generating callback URLs for the provider. Should
                      be set to an address at which the provider can reach back to
                      the controller.
                    type: string
                  callbackUrl:
                    description: (String) The URL that should be provided to the IdP
                      for callbacks. The URL that should be provided to the IdP for
                      callbacks.
                    type: string
                  claimsScopes:
                    description: (List of String) Claims scopes. Claims scopes.
                    items:
                      type: string
                    type: array
                  clientId:
                    description: (String) The client ID assigned to this auth method
                      from the provider. The client ID assigned to this auth method
                      from the provider.
                    type: string
                  clientSecretHmac:
                    description: (String) The HMAC of the client secret returned by
                      the Boundary controller, which is used for comparison after
                      initial setting of the value. The HMAC of the client secret
                      returned by the Boundary controller, which is used for comparison
                      after initial setting of the value.
                    type: string
                  clientSecretSecretRef:
                    description: (String, Sensitive) The secret key assigned to this
                      auth method from the provider. Once set, only the hash will
                      be kept and the original value can be removed from configuration.
                      The secret key assigned to this auth method from the provider.
                      Once set, only the hash will be kept and the original value
                      can be removed from configuration.
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  description:
                    description: (String) The auth method description. The auth method
                      description.
                    type: string
                  disableDiscoveredConfigValidation:
                    description: (Boolean) Disables validation logic ensuring that
                      the OIDC provider's information from its discovery endpoint
                      matches the information here. The validation is only performed
                      at create or update time. Disables validation logic ensuring
                      that the OIDC provider's information from its discovery endpoint
                      matches the information here. The validation is only performed
                      at create or update time.
                    type: boolean
                  idpCaCerts:
                    description: (List of String) A list of CA certificates to trust
                      when validating the IdP's token signatures. A list of CA certificates
                      to trust when validating the IdP's token signatures.
                    items:
                      type: string
                    type: array
                  isPrimaryForScope:
                    description: (Boolean) When true, makes this auth method the primary
                      auth method for the scope in which it resides. The primary auth
                      method for a scope means the user will be automatically created
                      when they login using an OIDC account. When true, makes this
                      auth method the primary auth method for the scope in which it
                      resides. The primary auth method for a scope means the user
                      will be automatically created when they login using an OIDC
                      account.
                    type: boolean
                  issuer:
                    description: (String) The issuer corresponding to the provider,
                      which must match the issuer field in generated tokens. The issuer
                      corresponding to the provider, which must match the issuer field
                      in generated tokens.
                    type: string
                  maxAge:
                    description: 1 and the default TTL of the chosen OIDC will be
                      used. The max age to provide to the provider, indicating how
                      much time is allowed to have passed since the last authentication
                      before the user is challenged again.
                    type: number
                  name:
                    description: (String) The auth method name. Defaults to the resource
                      name. The auth method name. Defaults to the resource name.
                    type: string
                  prompts:
                    description: 'user for reauthentication, account selection or
                      consent. Please note the values passed are case-sensitive. The
                      valid values are: none, login, consent and select_account. The
                      prompts passed to the identity provider to determine whether
                      to prompt the end-user for reauthentication, account selection
                      or consent. Please note the values passed are case-sensitive.
                      The valid values are: `none`, `login`, `consent` and `select_account`.'
                    items:
                      type: string
                    type: array
                  scopeId:
                    description: (String) The scope ID. The scope ID.
                    type: string
                  scopeIdRef:
                    description: Reference to a Scope in boundary to populate scopeId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  scopeIdSelector:
                    description: Selector for a Scope in boundary to populate scopeId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  signingAlgorithms:
                    description: (List of String) Allowed signing algorithms for the
                      provider's issued tokens. Allowed signing algorithms for the
                      provider's issued tokens.
                    items:
                      type: string
                    type: array
                  state:
                    description: private', or 'active-public'. Currently automatically
                      set to active-public. Can be one of 'inactive', 'active-private',
                      or 'active-public'. Currently automatically set to active-public.
                    type: string
                  type:
                    description: (String) The type of auth method; hardcoded. The
                      type of auth method; hardcoded.
                    type: string
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  accountClaimMaps:
                    description: (List of String) Account claim maps for the to_claim
                      of sub. Account claim maps for the to_claim of sub.
                    items:
                      type: string
                    type: array
                  allowedAudiences:
                    description: (List of String) Audiences for which the provider
                      responses will be allowed Audiences for which the provider responses
                      will be allowed
                    items:
                      type: string
                    type: array
                  apiUrlPrefix:
                    description: (String) The API prefix to use when generating callback
                      URLs for the provider. Should be set to an address at which
                      the provider can reach back to the controller. The API prefix
                      to use when generating callback URLs for the provider. Should
                      be set to an address at which the provider can reach back to
                      the controller.
                    type: string
                  callbackUrl:
                    description: (String) The URL that should be provided to the IdP
                      for callbacks. The URL that should be provided to the IdP for
                      callbacks.
                    type: string
                  claimsScopes:
                    description: (List of String) Claims scopes. Claims scopes.
                    items:
                      type: string
                    type: array
                  clientId:
                    description: (String) The client ID assigned to this auth method
                      from the provider. The client ID assigned to this auth method
                      from the provider.
                    type: string
                  clientSecretHmac:
                    description: (String) The HMAC of the client secret returned by
                      the Boundary controller, which is used for comparison after
                      initial setting of the value. The HMAC of the client secret
                      returned by the Boundary controller, which is used for comparison
                      after initial setting of the value.
                    type: string
                  description:
                    description: (String) The auth method description. The auth method
                      description.
                    type: string
                  disableDiscoveredConfigValidation:
                    description: (Boolean) Disables validation logic ensuring that
                      the OIDC provider's information from its discovery endpoint
                      matches the information here. The validation is only performed
                      at create or update time. Disables validation logic ensuring
                      that the OIDC provider's information from its discovery endpoint
                      matches the information here. The validation is only performed
                      at create or update time.
                    type: boolean
                  idpCaCerts:
                    description: (List of String) A list of CA certificates to trust
                      when validating the IdP's token signatures. A list of CA certificates
                      to trust when validating the IdP's token signatures.
                    items:
                      type: string
                    type: array
                  isPrimaryForScope:
                    description: (Boolean) When true, makes this auth method the primary
                      auth method for the scope in which it resides. The primary auth
                      method for a scope means the user will be automatically created
                      when they login using an OIDC account. When true, makes this
                      auth method the primary auth method for the scope in which it
                      resides. The primary auth method for a scope means the user
                      will be automatically created when they login using an OIDC
                      account.
                    type: boolean
                  issuer:
                    description: (String) The issuer corresponding to the provider,
                      which must match the issuer field in generated tokens. The issuer
                      corresponding to the provider, which must match the issuer field
                      in generated tokens.
                    type: string
                  maxAge:
                    description: 1 and the default TTL of the chosen OIDC will be
                      used. The max age to provide to the provider, indicating how
                      much time is allowed to have passed since the last authentication
                      before the user is challenged again.
                    type: number
                  name:
                    description: (String) The auth method name. Defaults to the resource
                      name. The auth method name. Defaults to the resource name.
                    type: string
                  prompts:
                    description: 'user for reauthentication, account selection or
                      consent. Please note the values passed are case-sensitive. The
                      valid values are: none, login, consent and select_account. The
                      prompts passed to the identity provider to determine whether
                      to prompt the end-user for reauthentication, account selection
                      or consent. Please note the values passed are case-sensitive.
                      The valid values are: `none`, `login`, `consent` and `select_account`.'
                    items:
                      type: string
                    type: array
                  signingAlgorithms:
                    description: (List of String) Allowed signing algorithms for the
                      provider's issued tokens. Allowed signing algorithms for the
                      provider's issued tokens.
                    items:
                      type: string
                    type: array
                  state:
                    description: private', or 'active-public'. Currently automatically
                      set to active-public. Can be one of 'inactive', 'active-private',
                      or 'active-public'. Currently automatically set to active-public.
                    type: string
                  type:
                    description: (String) The type of auth method; hardcoded. The
                      type of auth method; hardcoded.
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: MethodOidcStatus defines the observed state of MethodOidc.
            properties:
              atProvider:
                properties:
                  accountClaimMaps:
                    description: (List of String) Account claim maps for the to_claim
                      of sub. Account claim maps for the to_claim of sub.
                    items:
                      type: string
                    type: array
                  allowedAudiences:
                    description: (List of String) Audiences for which the provider
                      responses will be allowed Audiences for which the provider responses
                      will be allowed
                    items:
                      type: string
                    type: array
                  apiUrlPrefix:
                    description: (String) The API prefix to use when generating callback
                      URLs for the provider. Should be set to an address at which
                      the provider can reach back to the controller. The API prefix
                      to use when generating callback URLs for the provider. Should
                      be set to an address at which the provider can reach back to
                      the controller.
                    type: string
                  callbackUrl:
                    description: (String) The URL that should be provided to the IdP
                      for callbacks. The URL that should be provided to the IdP for
                      callbacks.
                    type: string
                  claimsScopes:
                    description: (List of String) Claims scopes. Claims scopes.
                    items:
                      type: string
                    type: array
                  clientId:
                    description: (String) The client ID assigned to this auth method
                      from the provider. The client ID assigned to this auth method
                      from the provider.
                    type: string
                  clientSecretHmac:
                    description: (String) The HMAC of the client secret returned by
                      the Boundary controller, which is used for comparison after
                      initial setting of the value. The HMAC of the client secret
                      returned by the Boundary controller, which is used for comparison
                      after initial setting of the value.
                    type: string
                  description:
                    description: (String) The auth method description. The auth method
                      description.
                    type: string
                  disableDiscoveredConfigValidation:
                    description: (Boolean) Disables validation logic ensuring that
                      the OIDC provider's information from its discovery endpoint
                      matches the information here. The validation is only performed
                      at create or update time. Disables validation logic ensuring
                      that the OIDC provider's information from its discovery endpoint
                      matches the information here. The validation is only performed
                      at create or update time.
                    type: boolean
                  id:
                    description: (String) The ID of the auth method.
                    type: string
                  idpCaCerts:
                    description: (List of String) A list of CA certificates to trust
                      when validating the IdP's token signatures. A list of CA certificates
                      to trust when validating the IdP's token signatures.
                    items:
                      type: string
                    type: array
                  isPrimaryForScope:
                    description: (Boolean) When true, makes this auth method the primary
                      auth method for the scope in which it resides. The primary auth
                      method for a scope means the user will be automatically created
                      when they login using an OIDC account. When true, makes this
                      auth method the primary auth method for the scope in which it
                      resides. The primary auth method for a scope means the user
                      will be automatically created when they login using an OIDC
                      account.
                    type: boolean
                  issuer:
                    description: (String) The issuer corresponding to the provider,
                      which must match the issuer field in generated tokens. The issuer
                      corresponding to the provider, which must match the issuer field
                      in generated tokens.
                    type: string
                  maxAge:
                    description: 1 and the default TTL of the chosen OIDC will be
                      used. The max age to provide to the provider, indicating how
                      much time is allowed to have passed since the last authentication
                      before the user is challenged again.
                    type: number
                  name:
                    description: (String) The auth method name. Defaults to the resource
                      name. The auth method name. Defaults to the resource name.
                    type: string
                  prompts:
                    description: 'user for reauthentication, account selection or
                      consent. Please note the values passed are case-sensitive. The
                      valid values are: none, login, consent and select_account. The
                      prompts passed to the identity provider to determine whether
                      to prompt the end-user for reauthentication, account selection
                      or consent. Please note the values passed are case-sensitive.
                      The valid values are: `none`, `login`, `consent` and `select_account`.'
                    items:
                      type: string
                    type: array
                  scopeId:
                    description: (String) The scope ID. The scope ID.
                    type: string
                  signingAlgorithms:
                    description: (List of String) Allowed signing algorithms for the
                      provider's issued tokens. Allowed signing algorithms for the
                      provider's issued tokens.
                    items:
                      type: string
                    type: array
                  state:
                    description: private', or 'active-public'. Currently automatically
                      set to active-public. Can be one of 'inactive', 'active-private',
                      or 'active-public'. Currently automatically set to active-public.
                    type: string
                  type:
                    description: (String) The type of auth method; hardcoded. The
                      type of auth method; hardcoded.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
