apiVersion: boundary.boundary.upbound.io/v1alpha1
kind: User
metadata:
  annotations:
    meta.upbound.io/example-id: boundary/v1alpha1/user
  labels:
    testing.upbound.io/example-name: jeff
  name: jeff
spec:
  forProvider:
    accountIds:
    - ${boundary_account_password.jeff.id}
    description: Jeff's user resource
    name: jeff
    scopeId: ${boundary_scope.org.id}

---

apiVersion: account.boundary.upbound.io/v1alpha1
kind: Password
metadata:
  annotations:
    meta.upbound.io/example-id: boundary/v1alpha1/user
  labels:
    testing.upbound.io/example-name: jeff
  name: jeff
spec:
  forProvider:
    authMethodId: ${boundary_auth_method.password.id}
    loginName: jeff
    passwordSecretRef:
      key: example-key
      name: example-secret
      namespace: upbound-system
    type: password

---

apiVersion: auth.boundary.upbound.io/v1alpha1
kind: Method
metadata:
  annotations:
    meta.upbound.io/example-id: boundary/v1alpha1/user
  labels:
    testing.upbound.io/example-name: password
  name: password
spec:
  forProvider:
    scopeId: ${boundary_scope.org.id}
    type: password

---

apiVersion: boundary.boundary.upbound.io/v1alpha1
kind: Scope
metadata:
  annotations:
    meta.upbound.io/example-id: boundary/v1alpha1/user
  labels:
    testing.upbound.io/example-name: org
  name: org
spec:
  forProvider:
    autoCreateAdminRole: true
    autoCreateDefaultRole: true
    description: My first scope!
    name: organization_one
    scopeId: global
